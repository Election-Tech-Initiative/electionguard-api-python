# This hosts both APIs locally in parallel
# It mounts the codebase within the container and runs the APIs
# with hot reload enabled.

version: "3.8"
services:
  messagequeue:
    image: rabbitmq:3.8.16-management-alpine
    container_name: 'electionguard-message-queue'
    expose: 
      - 5672
      - 15672
    ports:
      - 5672:5672
      - 15672:15672

  mediator:
    build:
      context: .
      target: dev
    volumes:
      - "./app:/app/app"
    ports:
      - 8000:8000
    environment:
      API_MODE: "mediator"
      PROJECT_NAME: "ElectionGuard Mediator API"
      PORT: 8000

  guardian:
    build:
      context: .
      target: dev
    volumes:
      - "./app:/app/app"
    ports:
      - 8001:8001
    environment:
      API_MODE: "guardian"
      PROJECT_NAME: "ElectionGuard Guardian API"
      PORT: 8001
    links:
      - 'messagequeue'

  mongo:
    image: mongo
    container_name: 'electionguard-db'
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: BallotData
    volumes: 
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example   
    links:
      - 'mongo'

