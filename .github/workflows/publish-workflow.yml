name: Package

on:
    milestone:
        types: [closed]

jobs:
  linux_package:
    name: 'Linux'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Build and Publish
      run:  |
        commit="${{ github.sha }}"
        dotnet publish ./ElectionGuard.WebAPI/ElectionGuard.WebAPI.csproj /property:GenerateFullPaths=true -c Release -r linux-x64 --self-contained true --version-suffix "v${commit:0:7}"
    - name: Change Package Script Access
      run: chmod +x ./package/linux-x64/package.sh
    - name: Package Linux
      shell: bash
      run: |
        cd ./package/linux-x64 && ./package.sh
    - name: Upload Package
      uses: actions/upload-artifact@v1
      with:
        name: linux-x64
        path: package/linux-x64/electionguard-api.tar.gz
    - name: Upload Install Script
      uses: actions/upload-artifact@v1
      with:
        name: install-script-linux-x64
        path: package/linux-x64/install.sh
  linux_release:
    name: Upload Release
    needs: [linux_package]
    runs-on: 'ubuntu-latest'
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: Milestone Release
        tag_name: v1.0.0
        draft: true
        prerelease: true
    - name: Download Linux Package
      uses: actions/download-artifact@v1
      with:
        name: linux-x64
    - name: Download Linux Install Script
      uses: actions/download-artifact@v1
      with:
        name: install-script-linux-x64
    - name: GZip Linux Artifacts
      run: |
        cp linux-x64/electionguard-api.tar.gz .
        cp install-script-linux-x64/install.sh .
        tar -zcvf electionguard-api-artifacts-linux-x64.tar.gz electionguard-api.tar.gz install.sh
    - name: Display Artifacts
      run: ls
    - name: Upload Linux Artifacts
      id: upload-release-asset_1
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./electionguard-api-artifacts-linux-x64.tar.gz
        asset_name: electionguard-api-artifacts-linux-x64.tar.gz
        asset_content_type: application/x-compressed