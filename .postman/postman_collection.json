{
	"info": {
		"_postman_id": "973b6975-3a84-4e30-afb5-9936533b88a4",
		"name": "ElectionGuard API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Test API Exists",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{port}}/election",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"election"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Create Election",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f882d94-8ef7-4574-972e-dff1e9fc85a3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"ballot_numberOfSelections\", jsonData.electionGuardConfig.numberOfSelections)",
							"pm.environment.set(\"jointPublicKey\", jsonData.electionGuardConfig.jointPublicKey);",
							"pm.environment.set(\"trustee_keys\", JSON.stringify(jsonData.trusteeKeys))",
							"pm.environment.set(\"electionMap\", JSON.stringify(jsonData.electionMap));",
							"pm.environment.set(\"electionGuardConfig\", JSON.stringify(jsonData.electionGuardConfig));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "af1fa8db-46b5-4db7-8ad3-c00e212bf33e",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"config\": {\n\t\t\"numberOfTrustees\": {{trustee_count}},\n\t\t\"threshold\": {{trustee_threshold}},\n\t},\n\t\"election\": {{election}}\n}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{port}}/election",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"election"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Encrypt Ballots",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c58a6bfa-78e5-4b53-8f70-472853b332de",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"var encryptedBallotMessages = []",
							"",
							"for (i =0; i < jsonData.length; i++) {",
							"    encryptedBallotMessages.push(jsonData[i].encryptedBallotMessage)",
							"}",
							"",
							"pm.environment.set(\"encrypted_ballots\", JSON.stringify(encryptedBallotMessages))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"electionGuardConfig\": {{electionGuardConfig}},\n    \"electionMap\": {{electionMap}},\n    \"ballots\": [\n    \t{\n    \t\telection: {{election}},\n    \t\tballotStyle: {\n    \t\t\tid: \"1\"\n    \t\t},\n    \t\tvotes: {\n    \t\t\t\"supremecourt\" : [\n    \t\t\t\t{\n    \t\t\t\t\tid: \"locke\"\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t},\n    \t{\n    \t\telection: {{election}},\n    \t\tballotStyle: {\n    \t\t\tid: \"1\"\n    \t\t},\n    \t\tvotes: {\n    \t\t\t\"supremecourt\" : [\n    \t\t\t\t{\n    \t\t\t\t\tid: \"locke\"\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t},\n    \t{\n    \t\telection: {{election}},\n    \t\tballotStyle: {\n    \t\t\tid: \"1\"\n    \t\t},\n    \t\tvotes: {\n    \t\t\t\"supremecourt\" : [\n    \t\t\t\t{\n    \t\t\t\t\tid: \"locke\"\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t},\n    \t{\n    \t\telection: {{election}},\n    \t\tballotStyle: {\n    \t\t\tid: \"1\"\n    \t\t},\n    \t\tvotes: {\n    \t\t\t\"supremecourt\" : [\n    \t\t\t\t{\n    \t\t\t\t\tid: \"locke\"\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t}\n    ],\n    \"currentBallotCount\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{port}}/election/EncryptBallots",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"election",
						"EncryptBallots"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Record Ballots",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea1a600f-f211-47e0-ab02-5447b4a012ca",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"ballots_filename\", jsonData.encryptedBallotsFilename)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"electionGuardConfig\": {{electionGuardConfig}},\n    \"encryptedBallots\": {{encrypted_ballots}},\n    \"castBallotIndicies\": [0, 3],\n    \"spoiledBallotIndicies\": [1, 2],\n    \"exportPath\": \"~/election_results/ballots\",\n    \"exportFileNamePrefix\": \"my_election_ballots\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{port}}/election/RecordBallots",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"election",
						"RecordBallots"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Tally Votes",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"electionGuardConfig\": {{electionGuardConfig}},\n    \"electionMap\": {{electionMap}},\n    \"trusteeKeys\": {{trustee_keys}},\n    \"encryptedBallotsFileName\": \"{{ballots_filename}}\",\n    \"exportPath\": \"~/election_results/tallies\",\n    \"exportFileNamePrefix\": \"my_election_tallies\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{port}}/election/tallyVotes",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"election",
						"tallyVotes"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}